#!/usr/bin/perl
use strict;
use warnings;
use Time::Local;
# 指定目录路径
my $dir = '/home/postgres/test';
my $destion_dir = '/home/postgres/'
my $match ='^a'


# 指定的时间点，例如 2023年3月15日
my $year = 2024; # Perl中的年份是从1900开始计算的
my $month = 2; # 月份从0开始计算
my $day = 14;

# 将指定的时间点转换为UNIX时间戳
my $specified_timestamp = timelocal(0, 0, 0, $day, $month, $year);

# 打开目录
opendir(my $dh, $dir) or die "Cannot open directory: $!";

# 读取目录内的所有文件和目录，排除'.'和'..'
my @files = grep { !/^\.{1,2}$/ } readdir($dh);

# 关闭目录句柄
closedir($dh);

# 过滤出修改时间大于指定时间点的文件
@files = grep {
    my $file_path = "$dir/$_"; # 获取完整的文件路径
    my $mod_time = (stat($file_path))[9]; # 获取文件的最后修改时间（UNIX时间戳）
    $mod_time > $specified_timestamp
} @files;

@files = grep { /${match}/ } @files;

##################################
#输出1S，2S，3S，10S以上的SQL语句
##################################
my $pattern_one = qr/1[0-9]{3}\.\d{0,3}/; # 设置搜索模式
my $pattern_two = qr/2[0-9]{3}\.\d{0,3}/; # 设置搜索模式
my $pattern_three = qr/3[0-9]{3}\.\d{0,3}/; # 设置搜索模式
my $pattern_ten = qr/10[0-9]{3}\.\d{0,3}|\d{5,}\.\d{0,3}/; # 设置搜索模式
my $outfile_one = '$one.txt'; # 输出文件
my $outfile_two = 'two.txt'; # 输出文件
my $outfile_three = 'three.txt'; # 输出文件
my $outfile_ten = 'ten.txt'; # 输出文件

open(my $out_one, '>', ${destion_dir}.$outfile_one) or die "无法打开文件 'outfile_one' $!";
open(my $out_two, '>', ${destion_dir}.$outfile_two) or die "无法打开文件 'outfile_two' $!";
open(my $out_three, '>', ${destion_dir}.$outfile_three) or die "无法打开文件 'outfile_three' $!";
open(my $out_ten, '>', ${destion_dir}.$outfile_ten) or die "无法打开文件 'outfile_ten' $!";

foreach my $file (@files) {
    # 尝试打开文件
    open my $fh, '<', $file or do {
        warn "无法打开文件 '$file': $!";
        next; # 如果文件无法打开，则跳过这个文件，继续处理下一个
    };
    
    # 逐行读取文件内容
     while (my $line = <$fh>) {
        if ($line =~ /$pattern_one/) {
            print $out_one $line; # 如果匹配，就将行写入输出文件
        } elseif ($line =~ /$pattern_two/) {
			print $out_two $line; # 如果匹配，就将行写入输出文件
		} elseif ($line =~ /$pattern_three/) {
			print $out_three $line; # 如果匹配，就将行写入输出文件
		} elseif ($line =~ /$pattern_ten/) {
			print $out_ten $line; # 如果匹配，就将行写入输出文件
			
		}
    }
    
    # 完成文件处理后关闭文件句柄
    close $fh;
}
