对比oracle-pg
函数
-------------------------------------------------------------------------
 create schema comp;
 
 create table comp.TMP1(table_name varchar(150)); 
 
 CREATE SERVER oradb FOREIGN DATA WRAPPER oracle_fdw
          OPTIONS (dbserver 'test_oracle');  

 GRANT USAGE ON FOREIGN SERVER oradb TO infodba;

CREATE USER MAPPING FOR infodba SERVER oradb
          OPTIONS (user 'infodba', password 'infodba');

-------------------------------------------------------------------------
 --在数据库tc下
	   
	   
	   
	   
	   
--1. oracle pg 表函数创建和表

CREATE FOREIGN TABLE comp.op_user_tables (   
         OWNER varchar(30),
          TABLE_NAME     varchar (150),
          temporary varchar(4)		  
       ) SERVER oradb OPTIONS (schema 'SYS', table 'USER_TABLES');

CREATE OR REPLACE PROCEDURE comp.op_user_tables()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in( SELECT upper(t1.table_name) FROM op_user_tables t1 where t1.owner='INFODBA' and t1.temporary='N' except SELECT upper(table_name)
          FROM information_schema.tables 
          WHERE table_schema = 'PUBLIC' and table_type = 'BASE TABLE'
		  )
		loop
        insert into comp.TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--2.oracle pg 视图
CREATE FOREIGN TABLE comp.op_user_views (          
          TABLE_NAME     varchar (150)          
       ) SERVER oradb OPTIONS (schema 'SYS', table 'USER_VIEWS');


CREATE OR REPLACE PROCEDURE comp.op_user_views()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in( SELECT t1.table_name FROM comp.op_user_views t1 except SELECT upper(table_name)
      FROM information_schema.views
      WHERE table_schema = 'public'
		  )
		loop
        insert into comp.TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--3.oracle pg 索引
CREATE FOREIGN TABLE comp.op_user_indexes (   
          OWNER   varchar(50),       
          INDEX_NAME     varchar (150)                    
       ) SERVER oradb OPTIONS (schema 'SYS', table 'DBA_INDEXES');


CREATE OR REPLACE PROCEDURE comp.op_user_indexes()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table comp.tmp1;
  for table_name1 in(select INDEX_NAME from comp.op_user_indexes where index_name not like 'SYS_%' and OWNER='INFODBA' except 
           select upper(indexname) from pg_indexes where schemaname = 'public' and indexname not like 'sys_%' 
		  )
		loop
        insert into comp.TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--4.oracle pg 序列

CREATE FOREIGN TABLE comp.op_user_seq(          
          sequence_NAME     varchar (150),
          sequence_owner    varchar(50)         
       ) SERVER oradb OPTIONS (schema 'SYS', table 'DBA_SEQUENCES');


CREATE OR REPLACE PROCEDURE comp.op_user_seq()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table comp.tmp1;
  for table_name1 in(select sequence_NAME from comp.op_user_seq where sequence_owner='INFODBA' except 
           SELECT upper(sequence_name) FROM information_schema.sequences WHERE sequence_schema = 'public'
		  )
		loop
        insert into comp.TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 
----------------------------
---在数据库postgres下
 create table TMP1(table_name varchar(150)); 
--1.pg pg 表
CREATE OR REPLACE PROCEDURE pp_user_tables()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in(select * from dblink('dbname=tc_test','Select table_name from information_schema.tables where table_schema= ''public'' and table_type =''BASE TABLE''') as t(table_name varchar(150))
except 
select * from dblink('dbname=tc','Select table_name from information_schema.tables where table_schema=''public'' and table_type =''BASE TABLE''') as t(table_name varchar(150))

		  )
		loop
        insert into TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--2.pg_pg索引
CREATE OR REPLACE PROCEDURE pp_user_index()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in(select * from dblink('dbname=tc_test','select indexname from pg_indexes where schemaname=''public'' and indexname not like ''sys_%''') as t(table_name varchar(100))
except 
select * from dblink('dbname=tc','Select indexname from pg_indexes where schemaname=''public'' and indexname not like ''sys_%''') as t(table_name varchar(100)))
		loop
        insert into TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--3.序列pg pg
CREATE OR REPLACE PROCEDURE pp_user_seq()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in(select * from dblink('dbname=tc_test', 'select sequence_name from information_schema.sequences where sequence_schema= ''public''') as t(table_name varchar(100))
except 
select * from dblink('dbname=tc', 'select sequence_name from information_schema.sequences where sequence_schema= ''public'''
) as t(table_name varchar(100)))
		loop
        insert into TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$; 

--4.视图pg-pg
CREATE OR REPLACE PROCEDURE pp_user_views()  
  LANGUAGE plpgsql
AS $$
declare
   table_name1 varchar(150);
BEGIN 
  truncate table tmp1;
  for table_name1 in(select * from dblink('dbname=tc_test','select table_name from information_schema.views where table_schema = ''public''') as t(table_name varchar(100))
except 
select * from dblink('dbname=tc',' select table_name from information_schema.views where table_schema = ''public''') as t(table_name varchar(100)))
		loop
        insert into TMP1(table_name) values(table_name1);        	
		end loop;  
		raise notice 'successfull';
END;
$$;



--oracle_pg  在数据库tc下
drop schema comp cascade;
drop SERVER oradb FOREIGN DATA WRAPPER oracle_fdw cascade;
--pg_pg  在数据库postgres下
drop table TMP1;
drop PROCEDURE pp_user_tables();
drop PROCEDURE pp_user_index();
drop PROCEDURE pp_user_seq();
drop PROCEDURE pp_user_views();
