1.备份数据结构
  oracle，pg
  oracle：pg_dump -h 127.0.0.1 -p 5432 -U infodba -s -f tcoracle_table.dump infodba_test
  pg:  pg_dump -h 127.0.0.1 -p 5432 -U infodba -s -f tcinit_table.dump tc
2.准备PG数据库
  2.1数据库名更名为tc_init
     查看数据库有没有活动会话
	 select datname,pid,usename,application_name from pg_stat_activity where datname = 'tc';
	 
	select pg_terminate_backend( 22939);
	select pg_terminate_backend( 4835 );
	select pg_terminate_backend( 47982);
	select pg_terminate_backend( 60510);
	select pg_terminate_backend( 16610);
	select pg_terminate_backend( 50553);
	select pg_terminate_backend( 15731);
	select pg_terminate_backend( 52808);
	select pg_terminate_backend( 57814);
	 
	 命令变更
	  alter database testdb rename to test1db;
	  查看是否成功
	  select datname from pg_stat_database where datname='tc_init';
	  
  2.2创建数据库
    CREATE DATABASE tc WITH  owner infodba  encoding 'UTF8' template template0 LC_COLLATE='C'
  2.3删除数据库
  2.4授权
  grant all privileges on database tc to infodba;
 2.5修改默认表空间
    alter database tc set tablespace infodba_idata;


postgres=# \l
                                   List of databases
     Name     |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges
--------------+----------+----------+-------------+-------------+-----------------------
 infodba_test | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
 postgres     | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
 tc           | infodba  | UTF8     | C           | en_US.UTF-8 | =Tc/infodba          +
              |          |          |             |             | infodba=CTc/infodba
 template0    | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
              |          |          |             |             | postgres=CTc/postgres
 template1    | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
              |          |          |             |             | postgres=CTc/postgres
(5 rows)

postgres=# \c tc infodba
You are now connected to database "tc" as user "infodba".
tc=>
tc=>
tc=>
tc=> show search_path;
   search_path
-----------------
 "$user", public
(1 row)

tc=> \dn
  List of schemas
  Name  |  Owner
--------+----------
 public | postgres
(1 row)

tc=> \du
                                   List of roles
 Role name |                         Attributes                         | Member of
-----------+------------------------------------------------------------+-----------
 infodba   |                                                            | {}
 pgrewind  | Superuser                                                  | {}
 postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 replica   | Replication                                                | {}


SELECT
    obj_description(obj.oid) AS description,
    count(*) AS count
FROM
    pg_catalog.pg_class obj
JOIN
    pg_catalog.pg_namespace ns ON ns.oid = obj.relnamespace
WHERE
    ns.nspname NOT LIKE 'pg_%'
    AND ns.nspname <> 'information_schema'
GROUP BY
    obj_description(obj.oid)
ORDER BY
    count DESC;
------------------------------
create table test4(id int2,id2 int4,id3 int4,id4 int8,id5 bigint,id6 integer,id7 smallint); 

 create user TcClusterDB password 'tcclusterdb';
 create tablespace TcClusterDB_idata owner TcClusterDB location '/data01/pgsql/tc/tcclusterdb_idata';
 create database TcClusterDB with owner TcClusterDB encoding 'UTF8' template template0 lc_collate 'C' tablespace TcClusterDB_idata;
 grant all privileges on database TcClusterDB to TcClusterDB;
 grant CREATE ON TABLESPACE TcClusterDB_idata to TcClusterDB;
